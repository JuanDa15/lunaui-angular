{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Filled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'Button',\r\n  args: {\r\n    variant: 'filled',\r\n    size: 'medium'\r\n  },\r\n  play: async ({ canvasElement, step }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByTestId('luna-button')\r\n    const onClickFn = fn()\r\n    button.onclick = onClickFn();\r\n\r\n    await step('Click button', async () => {\r\n      await userEvent.click(button);\r\n    })\r\n    await waitFor(() => {\r\n      expect(button).toHaveFocus();\r\n      expect(onClickFn).toHaveBeenCalled();\r\n    });\r\n\r\n    await step('Blur button', async () => {\r\n      await userEvent.click(document.body);\r\n    })\r\n    await waitFor(() => expect(button).not.toHaveFocus());\r\n  }\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'large',\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  title: 'Example/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    backgroundColor: {\r\n      control: 'color',\r\n    },\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n  args: { onClick: fn() },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LunaButtonComponent>",
                "defaultValue": "{\r\n  title: 'Components/Buttons/Button',\r\n  component: LunaButtonComponent,\r\n  tags: ['autodocs', 'stable'],\r\n  parameters: {\r\n    layout: 'centered',\r\n    backgrounds: {\r\n      default: 'dark'\r\n    },\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      name: 'Size',\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n      description: 'The size of the button',\r\n      table: {\r\n        defaultValue: { summary: 'medium' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'small | medium | large'\r\n        }\r\n      }\r\n    },\r\n    disabled: {\r\n      name: 'Disabled',\r\n      control: { type: 'boolean' },\r\n      description: 'Whether the button is disabled',\r\n      table: {\r\n        defaultValue: { summary: 'false' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'boolean'\r\n        }\r\n      },\r\n    },\r\n    variant: {\r\n      name: 'Variant',\r\n      options: ['filled', 'tonal', 'outlined', 'text', 'elevated'],\r\n      control: \"select\",\r\n      description: 'The variant of the button',\r\n      table: {\r\n        defaultValue: { summary: 'filled' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'filled | tonal | outlined | text | elevated'\r\n        }\r\n      }\r\n    },\r\n    value: {\r\n      name: 'Value',\r\n      control: 'text',\r\n      description: 'The text to display in the button',\r\n      table: {\r\n        defaultValue: { summary: 'Try me !!' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'string'\r\n        }\r\n      }\r\n    },\r\n    styles: {\r\n      name: 'Styles',\r\n      control: 'object',\r\n      description: 'The styles to apply to the button',\r\n      table: {\r\n        defaultValue: { summary: '{}' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'Record<string, string>'\r\n        }\r\n      }\r\n    },\r\n    focus: {\r\n      name: 'Focus',\r\n      description: 'Emitted when the button is focused',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<FocusEvent>'\r\n        }\r\n      }\r\n    },\r\n    blur: {\r\n      name: 'Blur',\r\n      description: 'Emitted when the button loses focus',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<FocusEvent>'\r\n        }\r\n      }\r\n    },\r\n    onClick: {\r\n      name: 'onClick',\r\n      description: 'Emitted when the button is clicked',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<Event>'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  args: {\r\n    size: 'medium',\r\n    disabled: false,\r\n    variant: 'filled',\r\n    value: 'Try me !!',\r\n    styles: {},\r\n    onClick: fn(),\r\n    focus: fn(),\r\n    blur: fn()\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <luna-button\r\n        [size]=\"size\"\r\n        [disabled]=\"disabled\"\r\n        [variant]=\"variant\"\r\n        [styles]=\"styles\"\r\n        (onClick)=\"onClick($event)\"\r\n        (focus)=\"focus($event)\"\r\n        (blur)=\"blur($event)\"\r\n      >\r\n        {{value}}\r\n      </luna-button>`\r\n  })\r\n\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    docs: {\r\n      title: 'Luna UI',\r\n    },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    primary: true,\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n  },\r\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    size: 'small',\r\n    label: 'Button',\r\n  },\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LunaButtonComponent>",
                "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts": [
                {
                    "name": "Filled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'Button',\r\n  args: {\r\n    variant: 'filled',\r\n    size: 'medium'\r\n  },\r\n  play: async ({ canvasElement, step }) => {\r\n    const canvas = within(canvasElement);\r\n    const button = canvas.getByTestId('luna-button')\r\n    const onClickFn = fn()\r\n    button.onclick = onClickFn();\r\n\r\n    await step('Click button', async () => {\r\n      await userEvent.click(button);\r\n    })\r\n    await waitFor(() => {\r\n      expect(button).toHaveFocus();\r\n      expect(onClickFn).toHaveBeenCalled();\r\n    });\r\n\r\n    await step('Blur button', async () => {\r\n      await userEvent.click(document.body);\r\n    })\r\n    await waitFor(() => expect(button).not.toHaveFocus());\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LunaButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Components/Buttons/Button',\r\n  component: LunaButtonComponent,\r\n  tags: ['autodocs', 'stable'],\r\n  parameters: {\r\n    layout: 'centered',\r\n    backgrounds: {\r\n      default: 'dark'\r\n    },\r\n  },\r\n  argTypes: {\r\n    size: {\r\n      name: 'Size',\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n      description: 'The size of the button',\r\n      table: {\r\n        defaultValue: { summary: 'medium' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'small | medium | large'\r\n        }\r\n      }\r\n    },\r\n    disabled: {\r\n      name: 'Disabled',\r\n      control: { type: 'boolean' },\r\n      description: 'Whether the button is disabled',\r\n      table: {\r\n        defaultValue: { summary: 'false' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'boolean'\r\n        }\r\n      },\r\n    },\r\n    variant: {\r\n      name: 'Variant',\r\n      options: ['filled', 'tonal', 'outlined', 'text', 'elevated'],\r\n      control: \"select\",\r\n      description: 'The variant of the button',\r\n      table: {\r\n        defaultValue: { summary: 'filled' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'filled | tonal | outlined | text | elevated'\r\n        }\r\n      }\r\n    },\r\n    value: {\r\n      name: 'Value',\r\n      control: 'text',\r\n      description: 'The text to display in the button',\r\n      table: {\r\n        defaultValue: { summary: 'Try me !!' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'string'\r\n        }\r\n      }\r\n    },\r\n    styles: {\r\n      name: 'Styles',\r\n      control: 'object',\r\n      description: 'The styles to apply to the button',\r\n      table: {\r\n        defaultValue: { summary: '{}' },\r\n        category: 'Inputs',\r\n        type: {\r\n          summary: 'Record<string, string>'\r\n        }\r\n      }\r\n    },\r\n    focus: {\r\n      name: 'Focus',\r\n      description: 'Emitted when the button is focused',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<FocusEvent>'\r\n        }\r\n      }\r\n    },\r\n    blur: {\r\n      name: 'Blur',\r\n      description: 'Emitted when the button loses focus',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<FocusEvent>'\r\n        }\r\n      }\r\n    },\r\n    onClick: {\r\n      name: 'onClick',\r\n      description: 'Emitted when the button is clicked',\r\n      table: {\r\n        category: 'Events',\r\n        type: {\r\n          summary: 'EventEmitter<Event>'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  args: {\r\n    size: 'medium',\r\n    disabled: false,\r\n    variant: 'filled',\r\n    value: 'Try me !!',\r\n    styles: {},\r\n    onClick: fn(),\r\n    focus: fn(),\r\n    blur: fn()\r\n  },\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <luna-button\r\n        [size]=\"size\"\r\n        [disabled]=\"disabled\"\r\n        [variant]=\"variant\"\r\n        [styles]=\"styles\"\r\n        (onClick)=\"onClick($event)\"\r\n        (focus)=\"focus($event)\"\r\n        (blur)=\"blur($event)\"\r\n      >\r\n        {{value}}\r\n      </luna-button>`\r\n  })\r\n\r\n}"
                }
            ],
            "projects/lunaui-angular/src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'large',\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Example/Button',\r\n  component: ButtonComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    backgroundColor: {\r\n      control: 'color',\r\n    },\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n  args: { onClick: fn() },\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    primary: true,\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Button',\r\n  },\r\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    size: 'small',\r\n    label: 'Button',\r\n  },\r\n}"
                }
            ],
            "projects/lunaui-angular/src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}"
                }
            ],
            "projects/lunaui-angular/src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "projects/lunaui-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lunaui-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    docs: {\r\n      title: 'Luna UI',\r\n    },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/lunaui-angular/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/lunaui-angular/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lunaui-angular/src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/lunaui-angular/src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lunaui-angular/src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "projects/lunaui-angular/src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LunaButtonComponent>",
                    "file": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/lunaui-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lunaui-angular/src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}